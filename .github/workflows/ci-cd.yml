name: CI/CD Pipeline

on:
  push:
  pull_request:

jobs:
  backend-lint:
    name: Backend Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run backend lint
      run: |
        cd backend
        npm run lint

  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci --legacy-peer-deps
        
    - name: Run frontend lint
      run: |
        cd frontend
        npm run lint

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    needs: [backend-lint, frontend-lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci --legacy-peer-deps
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 7

  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: [backend-lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Create data directory
      run: |
        cd backend
        mkdir -p data
        
    - name: Run backend tests
      run: |
        cd backend
        npm test -- --coverage --watchAll=false --runInBand
        
    - name: Upload backend coverage
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: [frontend-lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci --legacy-peer-deps
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false --passWithNoTests
        
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        file: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-test, frontend-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download frontend build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        echo "Frontend build artifacts are ready"
        echo "Backend tests passed"
        echo "Frontend tests passed"
